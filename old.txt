***************** OLD RECENT COMMAND
await getApp(guildId).commands.post({
		data: 
			{
				name: "recent",
				description: "Get recent matches of the player",
				options: [
					{
						name: "player",
						description: "The player",
						type: 3,
						required: true
					}
				]
			},
	})

************* reply shortcut
const createAPIMessage = async (interaction, content) => {
	const { data, files } = await Discord.APIMessage.create(
		client.channels.resolve(interaction.channel_id),
		content
	)
		.resolveData()
		.resolveFiles()

	return { ...data, files }
}
const reply = async (interaction, response) => {
    let data = {
        content: response
    }

    //Embeds
    if (typeof response === 'object') {
        data = await createAPIMessage(interaction, response);
    }
    client.api.interactions(interaction.id, interaction.token).callback.post({
        data: {
            type: 4,
            data
        }
    });
}

******************* OLD ADD COMMAND
init_options = { url: "https://discord.com/api/v8/applications/855980895899222026/guilds/773204943246065664/commands",
			   	 headers: { "Authorization": "Bot ODU1OTgwODk1ODk5MjIyMDI2.YM6YVA.Vi8V_H-YUytfB5IBs3_a9_EXIdQ"},
				 json: {
					 "name": "recent",
					 "description": "Get recent matches of the player",
					 "options": [
						 {
							 "name": "player",
							 "description": "The player",
							 "type": 3,
							 "required": true
						 }
					 ]
				 }
  			   };

request.post(init_options);

**************** SEND WEBHOOK MSG
const webhookClient = new Discord.WebhookClient(config.webhookID, config.webhookToken);

		webhookClient.send(playerID, {
			username: "DotaBuff Bot",
			embeds: embeds,
		});

**********************
		let time_since = (Date.now() - new Date(match.start_time * 1000))/3600000;
		var hours = true;
		if (time_since > 24) {
			hours = false;
			time_since /= 24;
		}


			.addFields(
				{ name: (match.player_slot < 128) === match.radiant_win ? "WON  " : "LOST  ",
				  value: Math.floor(time_since) + (hours ? " hour" : " day") + (Math.floor(time_since) > 1 ? "s" : "") + " ago", inline: true
				},
*******************************
				{ name: (match.player_slot < 128) === match.radiant_win ? "WON  " : "LOST  ",
				  value: timeAgo(match.start_time) + " ago", inline: true
				},
				{ name: "KDA: " + match.kills + '/' + match.deaths + '/' + match.assists,
				 value:  lobbies[match.lobby_type].name, inline: true
				},
				{ name: "Duration: " + duration_minutes + ":" + duration_seconds,
				  value: "Party Size: " + match.party_size, inline: true
				},
****************************